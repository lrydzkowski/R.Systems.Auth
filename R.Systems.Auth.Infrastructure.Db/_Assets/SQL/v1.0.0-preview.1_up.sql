CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211023100719_init_db') THEN
    CREATE SCHEMA IF NOT EXISTS "user";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211023100719_init_db') THEN
    CREATE TABLE "user".role (
        role_id bigint GENERATED BY DEFAULT AS IDENTITY,
        role_key character varying(200) NOT NULL,
        name character varying(200) NOT NULL,
        description character varying(200) NOT NULL,
        CONSTRAINT "PK_role" PRIMARY KEY (role_id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211023100719_init_db') THEN
    CREATE TABLE "user"."user" (
        user_id bigint GENERATED BY DEFAULT AS IDENTITY,
        email character varying(200) NOT NULL,
        first_name character varying(200) NOT NULL,
        last_name character varying(200) NOT NULL,
        password_hash character varying(200) NULL,
        CONSTRAINT "PK_user" PRIMARY KEY (user_id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211023100719_init_db') THEN
    CREATE TABLE "user".user_role (
        role_id bigint NOT NULL,
        user_id bigint NOT NULL,
        CONSTRAINT "PK_user_role" PRIMARY KEY (role_id, user_id),
        CONSTRAINT "FK_user_role_role_role_id" FOREIGN KEY (role_id) REFERENCES "user".role (role_id) ON DELETE CASCADE,
        CONSTRAINT "FK_user_role_user_user_id" FOREIGN KEY (user_id) REFERENCES "user"."user" (user_id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211023100719_init_db') THEN
    INSERT INTO "user".role (role_id, description, name, role_key)
    VALUES (1, 'System administrator.', 'Administrator', 'admin');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211023100719_init_db') THEN
    INSERT INTO "user"."user" (user_id, email, first_name, last_name, password_hash)
    VALUES (1, 'admin@lukaszrydzkowski.pl', 'Lukasz', 'Rydzkowski', NULL);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211023100719_init_db') THEN
    INSERT INTO "user".user_role (role_id, user_id)
    VALUES (1, 1);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211023100719_init_db') THEN
    CREATE INDEX "IX_user_role_user_id" ON "user".user_role (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211023100719_init_db') THEN
    PERFORM setval(
        pg_get_serial_sequence('"user".role', 'role_id'),
        GREATEST(
            (SELECT MAX(role_id) FROM "user".role) + 1,
            nextval(pg_get_serial_sequence('"user".role', 'role_id'))),
        false);
    PERFORM setval(
        pg_get_serial_sequence('"user"."user"', 'user_id'),
        GREATEST(
            (SELECT MAX(user_id) FROM "user"."user") + 1,
            nextval(pg_get_serial_sequence('"user"."user"', 'user_id'))),
        false);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211023100719_init_db') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20211023100719_init_db', '6.0.0');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211101143612_add_user_role') THEN
    ALTER TABLE "user".role ALTER COLUMN role_id RESTART WITH 3;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211101143612_add_user_role') THEN
    INSERT INTO "user".role (role_id, description, name, role_key)
    VALUES (2, 'Standard user.', 'User', 'user');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211101143612_add_user_role') THEN
    PERFORM setval(
        pg_get_serial_sequence('"user".role', 'role_id'),
        GREATEST(
            (SELECT MAX(role_id) FROM "user".role) + 1,
            nextval(pg_get_serial_sequence('"user".role', 'role_id'))),
        false);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211101143612_add_user_role') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20211101143612_add_user_role', '6.0.0');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211123183511_add_refresh_token_cols') THEN
    ALTER TABLE "user"."user" ADD refresh_token character varying(200) NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211123183511_add_refresh_token_cols') THEN
    ALTER TABLE "user"."user" ADD refresh_token_expire_date_time_utc timestamp without time zone NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211123183511_add_refresh_token_cols') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20211123183511_add_refresh_token_cols', '6.0.0');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211205110211_unify_id_columns') THEN
    ALTER TABLE "user"."user" RENAME COLUMN user_id TO id;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211205110211_unify_id_columns') THEN
    ALTER TABLE "user".role RENAME COLUMN role_id TO id;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211205110211_unify_id_columns') THEN
    ALTER TABLE "user"."user" ALTER COLUMN id RESTART WITH 2;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211205110211_unify_id_columns') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20211205110211_unify_id_columns', '6.0.0');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211216190049_add_user_email_unique_constraint') THEN
    CREATE UNIQUE INDEX "IX_user_email" ON "user"."user" (email);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211216190049_add_user_email_unique_constraint') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20211216190049_add_user_email_unique_constraint', '6.0.0');
    END IF;
END $EF$;
COMMIT;

